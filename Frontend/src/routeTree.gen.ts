/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthenticatedLayoutImport } from './routes/_unauthenticatedLayout'
import { Route as UnauthenticatedImport } from './routes/_unauthenticated'
import { Route as AuthenticationImport } from './routes/_authentication'
import { Route as AuthenticatedLayoutImport } from './routes/_authenticatedLayout'
import { Route as AuthenticatedLayoutIndexImport } from './routes/_authenticatedLayout/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as UnauthenticatedLayoutInsideLayoutImport } from './routes/_unauthenticatedLayout/insideLayout'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const UnauthenticatedLayoutRoute = UnauthenticatedLayoutImport.update({
  id: '/_unauthenticatedLayout',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedRoute = UnauthenticatedImport.update({
  id: '/_unauthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRoute = AuthenticationImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedLayoutRoute = AuthenticatedLayoutImport.update({
  id: '/_authenticatedLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedLayoutIndexRoute = AuthenticatedLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedLayoutRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const UnauthenticatedLayoutInsideLayoutRoute =
  UnauthenticatedLayoutInsideLayoutImport.update({
    path: '/insideLayout',
    getParentRoute: () => UnauthenticatedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticatedLayout': {
      id: '/_authenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticated': {
      id: '/_unauthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticatedLayout': {
      id: '/_unauthenticatedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UnauthenticatedLayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_unauthenticatedLayout/insideLayout': {
      id: '/_unauthenticatedLayout/insideLayout'
      path: '/insideLayout'
      fullPath: '/insideLayout'
      preLoaderRoute: typeof UnauthenticatedLayoutInsideLayoutImport
      parentRoute: typeof UnauthenticatedLayoutImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticatedLayout/': {
      id: '/_authenticatedLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedLayoutIndexImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedLayoutRoute: AuthenticatedLayoutRoute.addChildren({
    AuthenticatedLayoutIndexRoute,
  }),
  UnauthenticatedLayoutRoute: UnauthenticatedLayoutRoute.addChildren({
    UnauthenticatedLayoutInsideLayoutRoute,
  }),
  AboutLazyRoute,
  AuthLoginRoute,
  AuthRegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/_authenticatedLayout",
        "/_authentication",
        "/_unauthenticated",
        "/_unauthenticatedLayout",
        "/about",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/_authenticatedLayout": {
      "filePath": "_authenticatedLayout.jsx",
      "children": [
        "/_authenticatedLayout/"
      ]
    },
    "/_authentication": {
      "filePath": "_authentication.jsx"
    },
    "/_unauthenticated": {
      "filePath": "_unauthenticated.jsx"
    },
    "/_unauthenticatedLayout": {
      "filePath": "_unauthenticatedLayout.jsx",
      "children": [
        "/_unauthenticatedLayout/insideLayout"
      ]
    },
    "/about": {
      "filePath": "about.lazy.jsx"
    },
    "/_unauthenticatedLayout/insideLayout": {
      "filePath": "_unauthenticatedLayout/insideLayout.jsx",
      "parent": "/_unauthenticatedLayout"
    },
    "/auth/login": {
      "filePath": "auth/login.jsx"
    },
    "/auth/register": {
      "filePath": "auth/register.jsx"
    },
    "/_authenticatedLayout/": {
      "filePath": "_authenticatedLayout/index.jsx",
      "parent": "/_authenticatedLayout"
    }
  }
}
ROUTE_MANIFEST_END */
